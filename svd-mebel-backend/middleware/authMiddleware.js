const jwt = require("jsonwebtoken");

module.exports = (req, res, next) => {
    const authHeader = req.headers.authorization;
    console.log("üîç –ó–∞–≥–æ–ª–æ–≤–æ–∫ Authorization:", authHeader);

    if (!authHeader || !authHeader.startsWith("Bearer ")) {
        console.log("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç");
        return res.status(401).json({ message: "–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–µ—â–µ–Ω–∞" });
    }

    const token = authHeader.split(" ")[1];
    console.log("üìú –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", token);
    console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ —Å —Å–µ–∫—Ä–µ—Ç–æ–º:", process.env.JWT_SECRET);

    try {
        const decoded = jwt.verify(token, process.env.JWT_SECRET);
        console.log("‚úÖ –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", decoded);

        req.user = decoded; // ‚úÖ –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å userId
        next();
    } catch (error) {
        console.log("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:", error.message);
        res.status(401).json({ message: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω" });
    }
};
